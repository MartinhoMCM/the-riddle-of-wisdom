{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/martinho.mussamba/development/game/angular-16/the-riddle-of-wisdom/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TranslateService } from '@ngx-translate/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ChatService } from './data-ai-processing';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nimport * as i2 from \"./data-ai-processing\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = a0 => ({\n  \"selected\": a0\n});\nfunction AppComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 25);\n    i0.ɵɵlistener(\"click\", function AppComponent_li_16_Template_li_click_0_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectedCategory(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, ctx_r2.indexSelected === i_r2));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 2, category_r4));\n  }\n}\nfunction AppComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵlistener(\"click\", function AppComponent_option_20_Template_option_click_0_listener() {\n      const state_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.switchLanguage(state_r6.abbrev));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", state_r6);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", state_r6.name, \" \");\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(translate, dataProcessing) {\n      this.translate = translate;\n      this.dataProcessing = dataProcessing;\n      this.title = 'the-riddle-of-wisdom';\n      this.words = \"\";\n      this.chances = 8;\n      this.guessChar = '';\n      this.isAi = false;\n      this.isHuman = false;\n      this.selectCategory = '';\n      this.indexSelected = 0;\n      this.geminiIsProcessing = false;\n      this.categories = ['VOCABULARY', 'COUNTRIES', 'CITIES', 'MATH_SEQUENCE', 'FOOTBALL_CLUBS', 'CELEBRITIES', 'MOVIE_TITLES'];\n      this.totalWords = 0;\n      this.completedWords = 0;\n      this.wordPicked = '';\n      this.displayWord = '';\n      this.states = [{\n        name: 'English',\n        abbrev: 'en'\n      }, {\n        name: 'Português',\n        abbrev: 'pt'\n      }];\n      this.currentLang = 'en';\n      this.fonteWordsEn = [];\n      this.fonteWordsPt = [];\n      this.fonteWords = [];\n      translate.setDefaultLang('pt');\n      this.form = new FormGroup({\n        state: new FormControl(this.states[0])\n      });\n      this.switchLanguage(this.states[0].abbrev);\n    }\n    getLanguage() {\n      this.form.get('state').valueChanges.subscribe(value => {\n        if (value) {\n          this.switchLanguage(value.abbrev);\n        }\n      });\n    }\n    switchLanguage(language) {\n      this.translate.use(language);\n    }\n    ngOnInit() {\n      this.getLanguage();\n      this.InitChar();\n    }\n    InitChar() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.selectCategory = _this.categories[4];\n        const newSeq = yield _this.dataProcessing.sendMessage(`Categoria: ${_this.selectCategory}, língua: ${_this.states[0].abbrev}`);\n        _this.fonteWords = _this.processedData(newSeq);\n        _this.generateWord();\n        // display picked word\n        _this.display();\n      })();\n    }\n    processedData(data) {\n      const regex = /\\[(.*?)\\]/;\n      const match = data.match(regex);\n      if (match) {\n        const conteudo = match[1];\n        const arrayDeStrings = JSON.parse(`[${conteudo}]`);\n        return arrayDeStrings;\n      }\n      return [];\n    }\n    display() {\n      for (let index = 0; index < this.wordPicked.length; index++) {\n        if (index === 0) {\n          this.displayWord += this.wordPicked[0];\n        } else if (index === this.wordPicked.length - 1) {\n          this.displayWord += this.wordPicked[this.wordPicked.length - 1];\n        } else if (this.wordPicked.length > 5 && this.wordPicked.length / 2 === index) {\n          this.displayWord += this.wordPicked[this.wordPicked.length / 2];\n        } else {\n          this.displayWord += \"■\";\n        }\n      }\n    }\n    youLose() {\n      //  showMessage(`You Lose! The word was ${newWord.toUpperCase()}.`);\n      //  resetCard.style.backgroundImage = `url(assets/rain.gif)`;\n      //  gameEnd();\n    }\n    youWin() {\n      //  showMessage(`Congratulations, You Win! The word was ${newWord.toUpperCase()}.`);\n      //   resetCard.style.backgroundImage = `url(assets/confetti.gif)`;\n      // gameEnd();\n    }\n    startGame() {}\n    guessedByHuman() {\n      if (this.guessChar.length === 1 && this.words.length > 0) {\n        this.isHuman = false;\n        this.isAi = true;\n        // console.log(\"this.words \", this.words, \"this.guessChar \", this.guessChar.toUpperCase());\n        this.words = this.words.concat(\"\", this.guessChar.toUpperCase());\n        this.guessChar = '';\n      }\n    }\n    guessedByIA() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        _this2.isAi = false;\n        _this2.isHuman = true;\n        //const newWord = this.generateWord();\n        _this2.words = _this2.removeSpaces(_this2.words);\n        console.log(\"SENT -  \", _this2.words);\n        const newWord = yield _this2.dataProcessing.sendMessage(_this2.words);\n        _this2.words = newWord;\n        console.log(\"IA \", _this2.words);\n      })();\n    }\n    selectedCategory(index) {\n      this.selectCategory = this.categories[index];\n      this.indexSelected = index;\n    }\n    removeSpaces(input) {\n      return input.replace(/\\s+/g, '');\n    }\n    generateWord() {\n      console.log(\"fonteWords L \", this.fonteWords.length);\n      if (this.fonteWords.length > 0) {\n        const word = this.fonteWords[Math.floor(Math.random() * this.fonteWords.length)];\n        this.wordPicked = word;\n      }\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.TranslateService), i0.ɵɵdirectiveInject(i2.ChatService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 47,\n      vars: 12,\n      consts: [[1, \"main\", \"container\", \"mt-4\"], [\"id\", \"heading\", 1, \"m-4\"], [\"id\", \"word\"], [1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-3\"], [1, \"card\", \"menu-card\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown\"], [3, \"formGroup\"], [\"formControlName\", \"state\", 1, \"states\"], [3, \"ngValue\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-9\"], [1, \"card\", \"game-card\"], [\"id\", \"message\"], [1, \"space-word\"], [\"id\", \"remainingGuess\"], [\"id\", \"guessedBuilt\"], [\"id\", \"onx\"], [\"action\", \"guessChar\"], [\"id\", \"input\", \"type\", \"text\", \"minlength\", \"1\", \"maxlength\", \"1\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"id\", \"guess\", \"type\", \"button\", \"value\", \"Entre!\", 1, \"btnx\", \"bg-lightx\", 3, \"click\", \"disabled\"], [1, \"list-group-item\", 3, \"click\", \"ngClass\"], [3, \"click\", \"ngValue\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"THE RIDDLE \");\n          i0.ɵɵelementStart(4, \"em\");\n          i0.ɵɵtext(5, \"OF\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(6, \" WISDOM\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(7, \"div\", 2);\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 4)(10, \"div\", 5)(11, \"div\", 6)(12, \"div\", 7)(13, \"h5\", 8);\n          i0.ɵɵtext(14, \"Menu\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"ul\", 9);\n          i0.ɵɵtemplate(16, AppComponent_li_16_Template, 3, 6, \"li\", 10);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 11)(18, \"form\", 12)(19, \"select\", 13);\n          i0.ɵɵtemplate(20, AppComponent_option_20_Template, 2, 2, \"option\", 14);\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(21, \"div\", 15)(22, \"div\", 16)(23, \"div\", 7)(24, \"h5\", 8);\n          i0.ɵɵtext(25);\n          i0.ɵɵpipe(26, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(27, \"span\", 17);\n          i0.ɵɵtext(28, \"Good, let's mountain this \");\n          i0.ɵɵelementStart(29, \"b\");\n          i0.ɵɵtext(30);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(31, \" by each letter\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 18)(33, \"span\", 2);\n          i0.ɵɵtext(34);\n          i0.ɵɵpipe(35, \"uppercase\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(36, \"span\", 19);\n          i0.ɵɵtext(37, \"You have \\u263C guesses remaining.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"div\", 20);\n          i0.ɵɵtext(39, \"\\u00A0\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(40, \"span\", 21);\n          i0.ɵɵtext(41, \"Type one character, only\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(42, \"form\", 22)(43, \"div\")(44, \"input\", 23);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_44_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.guessChar, $event) || (ctx.guessChar = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(45, \"div\")(46, \"input\", 24);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_input_click_46_listener() {\n            return ctx.startGame();\n          });\n          i0.ɵɵelementEnd()()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.states);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(26, 8, \"game\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.selectCategory);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(35, 10, ctx.displayWord));\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.guessChar);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.guessChar.length === 0);\n        }\n      },\n      dependencies: [i3.NgClass, i3.NgForOf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.MaxLengthValidator, i4.NgModel, i4.NgForm, i4.FormGroupDirective, i4.FormControlName, i3.UpperCasePipe, i1.TranslatePipe],\n      styles: [\".main[_ngcontent-%COMP%]{width:100vmin;height:80vh;border-radius:24px;background-image:linear-gradient(to bottom right,azure,#f0f8ff)}.menu-card[_ngcontent-%COMP%]{width:180px}.menu-card[_ngcontent-%COMP%], .game-card[_ngcontent-%COMP%]{min-height:450px;max-height:600px}h1[_ngcontent-%COMP%]{font-family:Black Ops One,system-ui;font-size:325%}@media screen and (max-width: 725px){h1[_ngcontent-%COMP%]{font-size:275%}}@media screen and (max-width: 640px){h1[_ngcontent-%COMP%]{font-size:200%}}em[_ngcontent-%COMP%]{font-family:Dancing Script,cursive;font-weight:700}#message[_ngcontent-%COMP%], #remainingGuess[_ngcontent-%COMP%]{font-size:105%}#remainingGuess[_ngcontent-%COMP%]{margin-top:16px;display:none}#input[_ngcontent-%COMP%]{font-size:200%;width:14%;text-align:center;border-radius:8px;border:3.25px solid turquoise}#guessedBuilt[_ngcontent-%COMP%], #word[_ngcontent-%COMP%], #guess[_ngcontent-%COMP%], #dotted[_ngcontent-%COMP%]{color:#40b5ad;font-size:150%;font-weight:700}#dotted[_ngcontent-%COMP%]{height:30px;width:30px;background-color:#40b5ad}input[type=button][_ngcontent-%COMP%]{margin-top:8px;padding:1% 6%;border:1px solid;border-radius:25px;background-color:coral}#guess[_ngcontent-%COMP%]{color:azure}#word[_ngcontent-%COMP%]{margin:16px 0}.space-word[_ngcontent-%COMP%]{margin:32px 0}.dotted[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_blink 1s infinite;height:30px;width:30px;background-color:#40b5ad}.notdotted[_ngcontent-%COMP%]{animation:none;display:none}@keyframes _ngcontent-%COMP%_blink{0%,to{opacity:1}50%{opacity:0}}li[_ngcontent-%COMP%]{transition:transform .2s;cursor:pointer}@keyframes _ngcontent-%COMP%_vibrate{0%{transform:translate(0)}25%{transform:translate(2px,2px)}50%{transform:translate(0)}75%{transform:translate(-2px,-2px)}to{transform:translate(0)}}li[_ngcontent-%COMP%]:active{background-color:#40b5ad}li[_ngcontent-%COMP%]:hover, li[_ngcontent-%COMP%]:focus{background-color:#90dfd9;color:#000;opacity:.6;animation:_ngcontent-%COMP%_vibrate .5s linear}.selected[_ngcontent-%COMP%]{background-color:#40b5ad}.dropdown[_ngcontent-%COMP%]{width:100%;background-color:#40b5ad;height:30px;padding:0}.states[_ngcontent-%COMP%]{width:100%;height:100%;background-color:#40b5ad;color:#000;border:none}.states[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]{background-color:#fff;color:#000;outline:none;border:none}.states[_ngcontent-%COMP%]:focus{border:none;outline:none}.states[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]:focus, .states[_ngcontent-%COMP%]   option[_ngcontent-%COMP%]:active{outline:none;border:none}.states[_ngcontent-%COMP%]:after{outline:none;border:none}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}